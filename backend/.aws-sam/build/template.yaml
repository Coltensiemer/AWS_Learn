Resources:
  MyVpcF9F0CA6F:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
      - Key: Name
        Value: BackendStack/MyVpc
    Metadata:
      aws:cdk:path: BackendStack/MyVpc/Resource
  MyVpcpublicSubnet1Subnet75CA916A:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
        - 0
        - Fn::GetAZs: ''
      CidrBlock: 10.0.0.0/22
      MapPublicIpOnLaunch: true
      Tags:
      - Key: aws-cdk:subnet-name
        Value: public
      - Key: aws-cdk:subnet-type
        Value: Public
      - Key: Name
        Value: BackendStack/MyVpc/publicSubnet1
      VpcId:
        Ref: MyVpcF9F0CA6F
    Metadata:
      aws:cdk:path: BackendStack/MyVpc/publicSubnet1/Subnet
  MyVpcpublicSubnet1RouteTable2E0CCC3A:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
      - Key: Name
        Value: BackendStack/MyVpc/publicSubnet1
      VpcId:
        Ref: MyVpcF9F0CA6F
    Metadata:
      aws:cdk:path: BackendStack/MyVpc/publicSubnet1/RouteTable
  MyVpcpublicSubnet1RouteTableAssociation6D520F26:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: MyVpcpublicSubnet1RouteTable2E0CCC3A
      SubnetId:
        Ref: MyVpcpublicSubnet1Subnet75CA916A
    Metadata:
      aws:cdk:path: BackendStack/MyVpc/publicSubnet1/RouteTableAssociation
  MyVpcpublicSubnet1DefaultRoute1C88571A:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId:
        Ref: MyVpcIGW5C4A4F63
      RouteTableId:
        Ref: MyVpcpublicSubnet1RouteTable2E0CCC3A
    DependsOn:
    - MyVpcVPCGW488ACE0D
    Metadata:
      aws:cdk:path: BackendStack/MyVpc/publicSubnet1/DefaultRoute
  MyVpcpublicSubnet2Subnet87EBD23B:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
        - 1
        - Fn::GetAZs: ''
      CidrBlock: 10.0.4.0/22
      MapPublicIpOnLaunch: true
      Tags:
      - Key: aws-cdk:subnet-name
        Value: public
      - Key: aws-cdk:subnet-type
        Value: Public
      - Key: Name
        Value: BackendStack/MyVpc/publicSubnet2
      VpcId:
        Ref: MyVpcF9F0CA6F
    Metadata:
      aws:cdk:path: BackendStack/MyVpc/publicSubnet2/Subnet
  MyVpcpublicSubnet2RouteTable18FD0DBF:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
      - Key: Name
        Value: BackendStack/MyVpc/publicSubnet2
      VpcId:
        Ref: MyVpcF9F0CA6F
    Metadata:
      aws:cdk:path: BackendStack/MyVpc/publicSubnet2/RouteTable
  MyVpcpublicSubnet2RouteTableAssociation2BD1A73B:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: MyVpcpublicSubnet2RouteTable18FD0DBF
      SubnetId:
        Ref: MyVpcpublicSubnet2Subnet87EBD23B
    Metadata:
      aws:cdk:path: BackendStack/MyVpc/publicSubnet2/RouteTableAssociation
  MyVpcpublicSubnet2DefaultRoute203C8627:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId:
        Ref: MyVpcIGW5C4A4F63
      RouteTableId:
        Ref: MyVpcpublicSubnet2RouteTable18FD0DBF
    DependsOn:
    - MyVpcVPCGW488ACE0D
    Metadata:
      aws:cdk:path: BackendStack/MyVpc/publicSubnet2/DefaultRoute
  MyVpcprivateSubnet1Subnet3E5A1110:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
        - 0
        - Fn::GetAZs: ''
      CidrBlock: 10.0.8.0/22
      MapPublicIpOnLaunch: false
      Tags:
      - Key: aws-cdk:subnet-name
        Value: private
      - Key: aws-cdk:subnet-type
        Value: Isolated
      - Key: Name
        Value: BackendStack/MyVpc/privateSubnet1
      VpcId:
        Ref: MyVpcF9F0CA6F
    Metadata:
      aws:cdk:path: BackendStack/MyVpc/privateSubnet1/Subnet
  MyVpcprivateSubnet1RouteTableCBD023BE:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
      - Key: Name
        Value: BackendStack/MyVpc/privateSubnet1
      VpcId:
        Ref: MyVpcF9F0CA6F
    Metadata:
      aws:cdk:path: BackendStack/MyVpc/privateSubnet1/RouteTable
  MyVpcprivateSubnet1RouteTableAssociation260F1146:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: MyVpcprivateSubnet1RouteTableCBD023BE
      SubnetId:
        Ref: MyVpcprivateSubnet1Subnet3E5A1110
    Metadata:
      aws:cdk:path: BackendStack/MyVpc/privateSubnet1/RouteTableAssociation
  MyVpcprivateSubnet2Subnet372894AA:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
        - 1
        - Fn::GetAZs: ''
      CidrBlock: 10.0.12.0/22
      MapPublicIpOnLaunch: false
      Tags:
      - Key: aws-cdk:subnet-name
        Value: private
      - Key: aws-cdk:subnet-type
        Value: Isolated
      - Key: Name
        Value: BackendStack/MyVpc/privateSubnet2
      VpcId:
        Ref: MyVpcF9F0CA6F
    Metadata:
      aws:cdk:path: BackendStack/MyVpc/privateSubnet2/Subnet
  MyVpcprivateSubnet2RouteTableB9EC50DF:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
      - Key: Name
        Value: BackendStack/MyVpc/privateSubnet2
      VpcId:
        Ref: MyVpcF9F0CA6F
    Metadata:
      aws:cdk:path: BackendStack/MyVpc/privateSubnet2/RouteTable
  MyVpcprivateSubnet2RouteTableAssociationBC4A677C:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: MyVpcprivateSubnet2RouteTableB9EC50DF
      SubnetId:
        Ref: MyVpcprivateSubnet2Subnet372894AA
    Metadata:
      aws:cdk:path: BackendStack/MyVpc/privateSubnet2/RouteTableAssociation
  MyVpcIGW5C4A4F63:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: BackendStack/MyVpc
    Metadata:
      aws:cdk:path: BackendStack/MyVpc/IGW
  MyVpcVPCGW488ACE0D:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId:
        Ref: MyVpcIGW5C4A4F63
      VpcId:
        Ref: MyVpcF9F0CA6F
    Metadata:
      aws:cdk:path: BackendStack/MyVpc/VPCGW
  MyVpcRestrictDefaultSecurityGroupCustomResourceA4FCCD62:
    Type: Custom::VpcRestrictDefaultSG
    Properties:
      ServiceToken:
        Fn::GetAtt:
        - CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E
        - Arn
      DefaultSecurityGroupId:
        Fn::GetAtt:
        - MyVpcF9F0CA6F
        - DefaultSecurityGroup
      Account:
        Ref: AWS::AccountId
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: BackendStack/MyVpc/RestrictDefaultSecurityGroupCustomResource/Default
  CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
      ManagedPolicyArns:
      - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
      - PolicyName: Inline
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - ec2:AuthorizeSecurityGroupIngress
            - ec2:AuthorizeSecurityGroupEgress
            - ec2:RevokeSecurityGroupIngress
            - ec2:RevokeSecurityGroupEgress
            Resource:
            - Fn::Join:
              - ''
              - - 'arn:'
                - Ref: AWS::Partition
                - ':ec2:'
                - Ref: AWS::Region
                - ':'
                - Ref: AWS::AccountId
                - :security-group/
                - Fn::GetAtt:
                  - MyVpcF9F0CA6F
                  - DefaultSecurityGroup
    Metadata:
      aws:cdk:path: BackendStack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Role
  CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E:
    Type: AWS::Lambda::Function
    Properties:
      Code: CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E
      Timeout: 900
      MemorySize: 128
      Handler: __entrypoint__.handler
      Role:
        Fn::GetAtt:
        - CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0
        - Arn
      Runtime:
        Fn::FindInMap:
        - LatestNodeRuntimeMap
        - Ref: AWS::Region
        - value
      Description: Lambda function for removing all inbound/outbound rules from the
        VPC default security group
    DependsOn:
    - CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0
    Metadata:
      SamNormalized: true
      SamResourceId: Handler
      aws:asset:path: ../../cdk.out/asset.ee7de53d64cc9d6248fa6aa550f92358f6c907b5efd6f3298aeab1b5e7ea358a
      aws:asset:property: Code
      aws:cdk:path: BackendStack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Handler
  BackendStackResourceInitializerFnSg67A66192:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: BackendStack/BackendStackResourceInitializerFnSg
      GroupName: BackendStackResourceInitializerFnSg
      SecurityGroupEgress:
      - CidrIp: '0.0.0.0/0'
        Description: Allow all outbound traffic by default
        IpProtocol: '-1'
      SecurityGroupIngress:
      - CidrIp: '0.0.0.0/0'
        Description: Opening RDS to Lambda Function
        FromPort: 5432
        IpProtocol: tcp
        ToPort: 5432
      VpcId:
        Ref: MyVpcF9F0CA6F
    Metadata:
      aws:cdk:path: BackendStack/BackendStackResourceInitializerFnSg/Resource
  rdssubnetgroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnet group for RDS instance
      DBSubnetGroupName: rds-subnet-group
      SubnetIds:
      - Ref: MyVpcprivateSubnet1Subnet3E5A1110
      - Ref: MyVpcprivateSubnet2Subnet372894AA
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: BackendStack/rds-subnet-group/Default
  BackendStackMyRdsInstanceSecretC9B51B633fdaad7efa858a3daf9490cf0a702aeb:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description:
        Fn::Join:
        - ''
        - - 'Generated by the CDK for stack: '
          - Ref: AWS::StackName
      GenerateSecretString:
        ExcludeCharacters: ' %+~`#$&*()|[]{}:;<>?!''/@"\'
        GenerateStringKey: password
        PasswordLength: 30
        SecretStringTemplate: '{"username":"postgres"}'
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: BackendStack/MyRdsInstance/Secret/Resource
  MyRdsInstanceSecretAttachmentC6CA4212:
    Type: AWS::SecretsManager::SecretTargetAttachment
    Properties:
      SecretId:
        Ref: BackendStackMyRdsInstanceSecretC9B51B633fdaad7efa858a3daf9490cf0a702aeb
      TargetId:
        Ref: MyRdsInstanceFB602CDD
      TargetType: AWS::RDS::DBInstance
    Metadata:
      aws:cdk:path: BackendStack/MyRdsInstance/Secret/Attachment/Resource
  MyRdsInstanceFB602CDD:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: '20'
      CopyTagsToSnapshot: true
      DBInstanceClass: db.t3.micro
      DBName: TestDB
      DBSubnetGroupName:
        Ref: rdssubnetgroup
      Engine: postgres
      EngineVersion: '16.3'
      MasterUserPassword:
        Fn::Join:
        - ''
        - - '{{resolve:secretsmanager:'
          - Ref: BackendStackMyRdsInstanceSecretC9B51B633fdaad7efa858a3daf9490cf0a702aeb
          - :SecretString:password::}}
      MasterUsername: postgres
      PubliclyAccessible: true
      StorageType: gp2
      VPCSecurityGroups:
      - Fn::GetAtt:
        - BackendStackResourceInitializerFnSg67A66192
        - GroupId
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: BackendStack/MyRdsInstance/Resource
  quizzesLambdaServiceRole0C22F465:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
      - Fn::Join:
        - ''
        - - 'arn:'
          - Ref: AWS::Partition
          - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      - Fn::Join:
        - ''
        - - 'arn:'
          - Ref: AWS::Partition
          - :iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
    DependsOn:
    - MyVpcprivateSubnet1RouteTableAssociation260F1146
    - MyVpcprivateSubnet2RouteTableAssociationBC4A677C
    Metadata:
      aws:cdk:path: BackendStack/quizzesLambda/ServiceRole/Resource
  quizzesLambdaServiceRoleDefaultPolicy3DD67799:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
        - Action:
          - secretsmanager:DescribeSecret
          - secretsmanager:GetSecretValue
          Effect: Allow
          Resource:
          - arn:aws:secretsmanager:us-east-2:339713106432:secret:BackendStackMyRdsInstanceSe-ViX8PqhMPhe1-BD8Jt1
          - Ref: MyRdsInstanceSecretAttachmentC6CA4212
        Version: '2012-10-17'
      PolicyName: quizzesLambdaServiceRoleDefaultPolicy3DD67799
      Roles:
      - Ref: quizzesLambdaServiceRole0C22F465
    DependsOn:
    - MyVpcprivateSubnet1RouteTableAssociation260F1146
    - MyVpcprivateSubnet2RouteTableAssociationBC4A677C
    Metadata:
      aws:cdk:path: BackendStack/quizzesLambda/ServiceRole/DefaultPolicy/Resource
  quizzesLambdaSecurityGroup075BB1FD:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Automatic security group for Lambda Function BackendStackquizzesLambdaF5323431
      SecurityGroupEgress:
      - CidrIp: '0.0.0.0/0'
        Description: Allow all outbound traffic by default
        IpProtocol: '-1'
      VpcId:
        Ref: MyVpcF9F0CA6F
    DependsOn:
    - MyVpcprivateSubnet1RouteTableAssociation260F1146
    - MyVpcprivateSubnet2RouteTableAssociationBC4A677C
    Metadata:
      aws:cdk:path: BackendStack/quizzesLambda/SecurityGroup/Resource
  quizzesLambdaF4CBF2B1:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 552e004a6de6db190ec41d5aacdb39965b87acd79f41ffbfe236a8c00864c7e6.zip
      Environment:
        Variables:
          DB_ENDPOINT:
            Fn::GetAtt:
            - MyRdsInstanceFB602CDD
            - Endpoint.Address
          DB_Name: TestDB
          DB_SECRET_ARN: arn:aws:secretsmanager:us-east-2:339713106432:secret:BackendStackMyRdsInstanceSe-ViX8PqhMPhe1-BD8Jt1
      Handler: index.handler
      Role:
        Fn::GetAtt:
        - quizzesLambdaServiceRole0C22F465
        - Arn
      Runtime: nodejs20.x
      Timeout: 5
      VpcConfig:
        SecurityGroupIds:
        - Fn::GetAtt:
          - quizzesLambdaSecurityGroup075BB1FD
          - GroupId
        SubnetIds:
        - Ref: MyVpcprivateSubnet1Subnet3E5A1110
        - Ref: MyVpcprivateSubnet2Subnet372894AA
    DependsOn:
    - MyVpcprivateSubnet1RouteTableAssociation260F1146
    - MyVpcprivateSubnet2RouteTableAssociationBC4A677C
    - quizzesLambdaServiceRoleDefaultPolicy3DD67799
    - quizzesLambdaServiceRole0C22F465
    Metadata:
      aws:cdk:path: BackendStack/quizzesLambda/Resource
      aws:asset:path: ../../cdk.out/asset.552e004a6de6db190ec41d5aacdb39965b87acd79f41ffbfe236a8c00864c7e6
      aws:asset:is-bundled: true
      aws:asset:property: Code
  usersLambdaServiceRole5889B047:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
      - Fn::Join:
        - ''
        - - 'arn:'
          - Ref: AWS::Partition
          - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      - Fn::Join:
        - ''
        - - 'arn:'
          - Ref: AWS::Partition
          - :iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
    DependsOn:
    - MyVpcprivateSubnet1RouteTableAssociation260F1146
    - MyVpcprivateSubnet2RouteTableAssociationBC4A677C
    Metadata:
      aws:cdk:path: BackendStack/usersLambda/ServiceRole/Resource
  usersLambdaServiceRoleDefaultPolicyEC2A02AF:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
        - Action:
          - secretsmanager:DescribeSecret
          - secretsmanager:GetSecretValue
          Effect: Allow
          Resource:
          - arn:aws:secretsmanager:us-east-2:339713106432:secret:BackendStackMyRdsInstanceSe-ViX8PqhMPhe1-BD8Jt1
          - Ref: MyRdsInstanceSecretAttachmentC6CA4212
        Version: '2012-10-17'
      PolicyName: usersLambdaServiceRoleDefaultPolicyEC2A02AF
      Roles:
      - Ref: usersLambdaServiceRole5889B047
    DependsOn:
    - MyVpcprivateSubnet1RouteTableAssociation260F1146
    - MyVpcprivateSubnet2RouteTableAssociationBC4A677C
    Metadata:
      aws:cdk:path: BackendStack/usersLambda/ServiceRole/DefaultPolicy/Resource
  usersLambdaSecurityGroup452ABE0B:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Automatic security group for Lambda Function BackendStackusersLambda3BB5155B
      SecurityGroupEgress:
      - CidrIp: '0.0.0.0/0'
        Description: Allow all outbound traffic by default
        IpProtocol: '-1'
      VpcId:
        Ref: MyVpcF9F0CA6F
    DependsOn:
    - MyVpcprivateSubnet1RouteTableAssociation260F1146
    - MyVpcprivateSubnet2RouteTableAssociationBC4A677C
    Metadata:
      aws:cdk:path: BackendStack/usersLambda/SecurityGroup/Resource
  usersLambdaB774E0F9:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: c0cdb05412a1595ba1ed8ba9d8e964763dd8579ce9c6f59eee70a902179f24e2.zip
      Environment:
        Variables:
          DB_ENDPOINT:
            Fn::GetAtt:
            - MyRdsInstanceFB602CDD
            - Endpoint.Address
          DB_Name: TestDB
          DB_SECRET_ARN: arn:aws:secretsmanager:us-east-2:339713106432:secret:BackendStackMyRdsInstanceSe-ViX8PqhMPhe1-BD8Jt1
      Handler: index.handler
      Role:
        Fn::GetAtt:
        - usersLambdaServiceRole5889B047
        - Arn
      Runtime: nodejs20.x
      Timeout: 5
      VpcConfig:
        SecurityGroupIds:
        - Fn::GetAtt:
          - usersLambdaSecurityGroup452ABE0B
          - GroupId
        SubnetIds:
        - Ref: MyVpcprivateSubnet1Subnet3E5A1110
        - Ref: MyVpcprivateSubnet2Subnet372894AA
    DependsOn:
    - MyVpcprivateSubnet1RouteTableAssociation260F1146
    - MyVpcprivateSubnet2RouteTableAssociationBC4A677C
    - usersLambdaServiceRoleDefaultPolicyEC2A02AF
    - usersLambdaServiceRole5889B047
    Metadata:
      aws:cdk:path: BackendStack/usersLambda/Resource
      aws:asset:path: ../../cdk.out/asset.c0cdb05412a1595ba1ed8ba9d8e964763dd8579ce9c6f59eee70a902179f24e2
      aws:asset:is-bundled: true
      aws:asset:property: Code
  EndpointEEF1FD8F:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: lambda-api
    Metadata:
      aws:cdk:path: BackendStack/Endpoint/Resource
  EndpointDeployment318525DA5ee73aa720f4e84e4bc21db42183a3a2:
    Type: AWS::ApiGateway::Deployment
    Properties:
      Description: Automatically created by the RestApi construct
      RestApiId:
        Ref: EndpointEEF1FD8F
    DependsOn:
    - EndpointquizzesGET3C74F402
    - Endpointquizzes8DEA2C19
    - EndpointusersPOSTAD4D13CE
    - Endpointusers04A1DBE0
    Metadata:
      aws:cdk:path: BackendStack/Endpoint/Deployment/Resource
  EndpointDeploymentStageprodB78BEEA0:
    Type: AWS::ApiGateway::Stage
    Properties:
      DeploymentId:
        Ref: EndpointDeployment318525DA5ee73aa720f4e84e4bc21db42183a3a2
      RestApiId:
        Ref: EndpointEEF1FD8F
      StageName: prod
    Metadata:
      aws:cdk:path: BackendStack/Endpoint/DeploymentStage.prod/Resource
  Endpointquizzes8DEA2C19:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
        - EndpointEEF1FD8F
        - RootResourceId
      PathPart: quizzes
      RestApiId:
        Ref: EndpointEEF1FD8F
    Metadata:
      aws:cdk:path: BackendStack/Endpoint/Default/quizzes/Resource
  EndpointquizzesGETApiPermissionBackendStackEndpointCB135AD4GETquizzesBB7BF1C1:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
        - quizzesLambdaF4CBF2B1
        - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
        - ''
        - - 'arn:'
          - Ref: AWS::Partition
          - ':execute-api:'
          - Ref: AWS::Region
          - ':'
          - Ref: AWS::AccountId
          - ':'
          - Ref: EndpointEEF1FD8F
          - /
          - Ref: EndpointDeploymentStageprodB78BEEA0
          - /GET/quizzes
    Metadata:
      aws:cdk:path: BackendStack/Endpoint/Default/quizzes/GET/ApiPermission.BackendStackEndpointCB135AD4.GET..quizzes
  EndpointquizzesGETApiPermissionTestBackendStackEndpointCB135AD4GETquizzes38E46A16:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
        - quizzesLambdaF4CBF2B1
        - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
        - ''
        - - 'arn:'
          - Ref: AWS::Partition
          - ':execute-api:'
          - Ref: AWS::Region
          - ':'
          - Ref: AWS::AccountId
          - ':'
          - Ref: EndpointEEF1FD8F
          - /test-invoke-stage/GET/quizzes
    Metadata:
      aws:cdk:path: BackendStack/Endpoint/Default/quizzes/GET/ApiPermission.Test.BackendStackEndpointCB135AD4.GET..quizzes
  EndpointquizzesGET3C74F402:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
          - ''
          - - 'arn:'
            - Ref: AWS::Partition
            - ':apigateway:'
            - Ref: AWS::Region
            - :lambda:path/2015-03-31/functions/
            - Fn::GetAtt:
              - quizzesLambdaF4CBF2B1
              - Arn
            - /invocations
      ResourceId:
        Ref: Endpointquizzes8DEA2C19
      RestApiId:
        Ref: EndpointEEF1FD8F
    Metadata:
      aws:cdk:path: BackendStack/Endpoint/Default/quizzes/GET/Resource
  Endpointusers04A1DBE0:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
        - EndpointEEF1FD8F
        - RootResourceId
      PathPart: users
      RestApiId:
        Ref: EndpointEEF1FD8F
    Metadata:
      aws:cdk:path: BackendStack/Endpoint/Default/users/Resource
  EndpointusersPOSTApiPermissionBackendStackEndpointCB135AD4POSTusers04191EC2:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
        - usersLambdaB774E0F9
        - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
        - ''
        - - 'arn:'
          - Ref: AWS::Partition
          - ':execute-api:'
          - Ref: AWS::Region
          - ':'
          - Ref: AWS::AccountId
          - ':'
          - Ref: EndpointEEF1FD8F
          - /
          - Ref: EndpointDeploymentStageprodB78BEEA0
          - /POST/users
    Metadata:
      aws:cdk:path: BackendStack/Endpoint/Default/users/POST/ApiPermission.BackendStackEndpointCB135AD4.POST..users
  EndpointusersPOSTApiPermissionTestBackendStackEndpointCB135AD4POSTusers7ADC0B9B:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
        - usersLambdaB774E0F9
        - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
        - ''
        - - 'arn:'
          - Ref: AWS::Partition
          - ':execute-api:'
          - Ref: AWS::Region
          - ':'
          - Ref: AWS::AccountId
          - ':'
          - Ref: EndpointEEF1FD8F
          - /test-invoke-stage/POST/users
    Metadata:
      aws:cdk:path: BackendStack/Endpoint/Default/users/POST/ApiPermission.Test.BackendStackEndpointCB135AD4.POST..users
  EndpointusersPOSTAD4D13CE:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: POST
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
          - ''
          - - 'arn:'
            - Ref: AWS::Partition
            - ':apigateway:'
            - Ref: AWS::Region
            - :lambda:path/2015-03-31/functions/
            - Fn::GetAtt:
              - usersLambdaB774E0F9
              - Arn
            - /invocations
      ResourceId:
        Ref: Endpointusers04A1DBE0
      RestApiId:
        Ref: EndpointEEF1FD8F
    Metadata:
      aws:cdk:path: BackendStack/Endpoint/Default/users/POST/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/21RTW/bMAz9Lb0rWpf2sGs+0KKHbYZd9BrQMusysSVDpBIEhv/7YMlxjGInPj4+8ZHUWv98/qUfH+DCK1OdVg2Vui8EzEnBhQ89mrXuPzqjdp/2I9upLJQNmSKUFmXk7ih3QfAdygbv/J3bMDtDIOTsLFaZpzMI3nu8WUFvUV5B8ALXyXTKNiJgvlq0ogo0wZNcX70LXbRbEoPyFes+tZ0l++2S2INACYxvlgWswZko0Pg0zH57Kw6KI8stWKjR6z5ZjsIU3sHXKIsJZ8H3yqAaaMsKDtZVeGT9J4aXYE28DUGr+9ylI8aYuYZMPEVCg+KnAzCjsN6MQfGT3gZzQtkC49Q+jjh3HR+jb4mZnB0UdFSnm+o+R5ZNR9FugnvsGne9rbHICoE6/W4EObIL3mC0vSVTo4R/o3y5aqQSGoaFLrC49r/PRj10Hdn6myrz7kwV+ugYlx8nibpP+zdIF+LIO2crkrjqeGV95B/n9Vo/68eHIxOtfLBCLeo8xX8kYCrTBAMAAA==
    Metadata:
      aws:cdk:path: BackendStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Mappings:
  LatestNodeRuntimeMap:
    af-south-1:
      value: nodejs20.x
    ap-east-1:
      value: nodejs20.x
    ap-northeast-1:
      value: nodejs20.x
    ap-northeast-2:
      value: nodejs20.x
    ap-northeast-3:
      value: nodejs20.x
    ap-south-1:
      value: nodejs20.x
    ap-south-2:
      value: nodejs20.x
    ap-southeast-1:
      value: nodejs20.x
    ap-southeast-2:
      value: nodejs20.x
    ap-southeast-3:
      value: nodejs20.x
    ap-southeast-4:
      value: nodejs20.x
    ap-southeast-5:
      value: nodejs20.x
    ap-southeast-7:
      value: nodejs20.x
    ca-central-1:
      value: nodejs20.x
    ca-west-1:
      value: nodejs20.x
    cn-north-1:
      value: nodejs18.x
    cn-northwest-1:
      value: nodejs18.x
    eu-central-1:
      value: nodejs20.x
    eu-central-2:
      value: nodejs20.x
    eu-north-1:
      value: nodejs20.x
    eu-south-1:
      value: nodejs20.x
    eu-south-2:
      value: nodejs20.x
    eu-west-1:
      value: nodejs20.x
    eu-west-2:
      value: nodejs20.x
    eu-west-3:
      value: nodejs20.x
    il-central-1:
      value: nodejs20.x
    me-central-1:
      value: nodejs20.x
    me-south-1:
      value: nodejs20.x
    mx-central-1:
      value: nodejs20.x
    sa-east-1:
      value: nodejs20.x
    us-east-1:
      value: nodejs20.x
    us-east-2:
      value: nodejs20.x
    us-west-1:
      value: nodejs20.x
    us-west-2:
      value: nodejs20.x
Outputs:
  Endpoint8024A810:
    Value:
      Fn::Join:
      - ''
      - - https://
        - Ref: EndpointEEF1FD8F
        - .execute-api.
        - Ref: AWS::Region
        - .
        - Ref: AWS::URLSuffix
        - /
        - Ref: EndpointDeploymentStageprodB78BEEA0
        - /
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
    - Fn::Or:
      - Fn::Equals:
        - Ref: AWS::Region
        - af-south-1
      - Fn::Equals:
        - Ref: AWS::Region
        - ap-east-1
      - Fn::Equals:
        - Ref: AWS::Region
        - ap-northeast-1
      - Fn::Equals:
        - Ref: AWS::Region
        - ap-northeast-2
      - Fn::Equals:
        - Ref: AWS::Region
        - ap-south-1
      - Fn::Equals:
        - Ref: AWS::Region
        - ap-southeast-1
      - Fn::Equals:
        - Ref: AWS::Region
        - ap-southeast-2
      - Fn::Equals:
        - Ref: AWS::Region
        - ca-central-1
      - Fn::Equals:
        - Ref: AWS::Region
        - cn-north-1
      - Fn::Equals:
        - Ref: AWS::Region
        - cn-northwest-1
    - Fn::Or:
      - Fn::Equals:
        - Ref: AWS::Region
        - eu-central-1
      - Fn::Equals:
        - Ref: AWS::Region
        - eu-north-1
      - Fn::Equals:
        - Ref: AWS::Region
        - eu-south-1
      - Fn::Equals:
        - Ref: AWS::Region
        - eu-west-1
      - Fn::Equals:
        - Ref: AWS::Region
        - eu-west-2
      - Fn::Equals:
        - Ref: AWS::Region
        - eu-west-3
      - Fn::Equals:
        - Ref: AWS::Region
        - il-central-1
      - Fn::Equals:
        - Ref: AWS::Region
        - me-central-1
      - Fn::Equals:
        - Ref: AWS::Region
        - me-south-1
      - Fn::Equals:
        - Ref: AWS::Region
        - sa-east-1
    - Fn::Or:
      - Fn::Equals:
        - Ref: AWS::Region
        - us-east-1
      - Fn::Equals:
        - Ref: AWS::Region
        - us-east-2
      - Fn::Equals:
        - Ref: AWS::Region
        - us-west-1
      - Fn::Equals:
        - Ref: AWS::Region
        - us-west-2
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically
      retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
    - Assert:
        Fn::Not:
        - Fn::Contains:
          - - '1'
            - '2'
            - '3'
            - '4'
            - '5'
          - Ref: BootstrapVersion
      AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap'
        with a recent version of the CDK CLI.
